#pragma once

#define VANGUARD_ASSERTIONS

#ifdef VANGUARD_ASSERTIONS
#define VANGUARD_ASSERT(x) if (!(x)) __debugbreak();
#else
#define VANGUARD_ASSERT(x) ;
#endif

#define VANGUARD_GL_ERR_CHECKING

#ifdef VANGUARD_GL_ERR_CHECKING
#define VANGUARD_ASSERT_GL_OKAY VANGUARD_ASSERT(vg::_::no_gl_errors(__FILE__, __LINE__))
#else
#define VANGUARD_ASSERT_GL_OKAY ;
#endif

#define VANGUARD_INVALIDATE_POINTER(ptr) delete ptr; ptr = nullptr;
#define VANGUARD_INVALIDATE_ARRAY(ptr) delete[] ptr; ptr = nullptr;

#ifndef VANGUARD_MIN_OPENGL_VERSION_MAJOR
#define VANGUARD_MIN_OPENGL_VERSION_MAJOR 4
#endif
#ifndef VANGUARD_MIN_OPENGL_VERSION_MINOR
#define VANGUARD_MIN_OPENGL_VERSION_MINOR 5
#endif
#define VANGUARD_MIN_OPENGL_VERSION_IS_AT_LEAST(major, minor) VANGUARD_MIN_OPENGL_VERSION_MAJOR > major || (VANGUARD_MIN_OPENGL_VERSION_MAJOR == major && VANGUARD_MIN_OPENGL_VERSION_MINOR >= minor)
#define VANGUARD_MIN_OPENGL_VERSION_IS_AT_MOST(major, minor) VANGUARD_MIN_OPENGL_VERSION_MAJOR < major || (VANGUARD_MIN_OPENGL_VERSION_MAJOR == major && VANGUARD_MIN_OPENGL_VERSION_MINOR <= minor)
